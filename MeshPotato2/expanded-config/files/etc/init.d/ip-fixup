#!/bin/sh
#### This is a horrible kludge. Should be part of first boot process, using UCI the right way.
#### Fails to delete files which helps debugging but will eventually fill disk.

## This script: enters the MAC of the WIFI into /config/wireless to avoid phy0 failures.
##Sets up IP addresses based on MAC addresses, mostly like commotionwireless.

cd /etc/config
mkdir -p ./tmp

# find macs
wlanmac=`cat /sys/class/ieee80211/phy0/macaddress`

test=`grep MESHIP ./network`
if [ "0" = $? ]; then

## Why are we randomizing the AP MAC? We already have a legit one.
#  apE=`cat /dev/urandom | hexdump -e '1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X"
"\n"' | head -1`
  apE=$wlanmac

## and why randomize this one?  why not just mac+1?
  meshE=`dd if=/dev/urandom bs=10 count=1 | \
        hexdump -e '1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X" ":" 1/1 "%02X" "\n"' | head -1`

#mesh ip is last 3 bytes of ether in decimal.
  meship=`echo $meshE |awk -f /etc/serval/scripts/mac2mesh.awk`

# ap is last 2 digits, followed by 1.
  apip=`echo $apE | awk -f /etc/serval/scripts/mac2apip.awk`

  echo $meship $meshE $apE $apip


  sed -e s/MESHIP/$meship/g -e s/APIP/$apip/g -e s/MESHETHER/$ether1/g  -e s/APETHER/$ether2/g < ./network > .
/tmp/network.$$
  cp network ./tmp/network.orig
  mv ./tmp/network.$$ /etc/config/network

fi

# now fix irritating hardware phy0 problem.
test=`grep MPMAC wireless`
if [ "0" = $? ]; then
# I'm sure there's a correct openwrt idiom for this  - oh well
  sed -e s/MPMAC/$wlanmac/g < ./wireless > ./tmp/wireless.$$
  cp wireless ./tmp/wireless.orig
  mv ./tmp/wireless.$$ /etc/config/wireless
fi
